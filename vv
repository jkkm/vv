#!/usr/bin/python3

# vv: A simple Python tool to manage Various VCS checkouts

# Copyright (c) 2013, 2014 Kyle McMartin <jkkm@jkkm.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

import os
import sys
import argparse
import configparser
import subprocess

# GitTree =
# BzrTree =
# HgTree  =
# CVSTree =
# SVNTree =

# Methods = { '.git', GitTree }, ...

cfgfile = os.path.expanduser("~/.vv.conf")
if not os.path.exists(cfgfile):
	sys.stderr.write("no config file %s" % cfgfile)

config = configparser.ConfigParser()
config.read(cfgfile)

tree = config.get("base", "path", fallback=os.path.expanduser("~/src"))
tree = os.path.expanduser(tree)

try:
	os.chdir(tree)
except OSError as e:
	print("unable to change directory to %s: %s" % tree, e)
	sys.exit(1)

top = os.getcwd()
for d in os.listdir(tree):
	if config.get(d, "type", fallback=None):
		print("%s has an override" % d)
	elif os.path.exists(d + '/.git'):
		os.chdir(d)
		print("git pull %s" % d)
		ret = subprocess.call(["git", "pull"])	
		if ret:
			print("%s: update failed" % d)
		os.chdir(top)
	elif os.path.exists(d + '/CVS'):
		os.chdir(d)
		print("cvs update %s" % d)
		ret = subprocess.call(["cvs", "update"])
		if ret:
			print("%s: update failed" % d)
		os.chdir(top)
	else:
		print("%s is an unknown type of tree" % d)

